/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type FanoutMembershipVoucher = Account<FanoutMembershipVoucherAccountData>;
export type FanoutMembershipVoucherAccountData = {
    discriminator: Array<number>;
    fanout: PublicKey;
    totalInflow: bigint;
    lastInflow: bigint;
    bumpSeed: number;
    membershipKey: PublicKey;
    shares: bigint;
};
export type FanoutMembershipVoucherAccountDataArgs = {
    fanout: PublicKey;
    totalInflow: number | bigint;
    lastInflow: number | bigint;
    bumpSeed: number;
    membershipKey: PublicKey;
    shares: number | bigint;
};
/** @deprecated Use `getFanoutMembershipVoucherAccountDataSerializer()` without any argument instead. */
export declare function getFanoutMembershipVoucherAccountDataSerializer(_context: object): Serializer<FanoutMembershipVoucherAccountDataArgs, FanoutMembershipVoucherAccountData>;
export declare function getFanoutMembershipVoucherAccountDataSerializer(): Serializer<FanoutMembershipVoucherAccountDataArgs, FanoutMembershipVoucherAccountData>;
/** @deprecated Use `deserializeFanoutMembershipVoucher(rawAccount)` without any context instead. */
export declare function deserializeFanoutMembershipVoucher(context: object, rawAccount: RpcAccount): FanoutMembershipVoucher;
export declare function deserializeFanoutMembershipVoucher(rawAccount: RpcAccount): FanoutMembershipVoucher;
export declare function fetchFanoutMembershipVoucher(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<FanoutMembershipVoucher>;
export declare function safeFetchFanoutMembershipVoucher(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<FanoutMembershipVoucher | null>;
export declare function fetchAllFanoutMembershipVoucher(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<FanoutMembershipVoucher[]>;
export declare function safeFetchAllFanoutMembershipVoucher(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<FanoutMembershipVoucher[]>;
export declare function getFanoutMembershipVoucherGpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<FanoutMembershipVoucher, {
    discriminator: Array<number>;
    fanout: PublicKey;
    totalInflow: number | bigint;
    lastInflow: number | bigint;
    bumpSeed: number;
    membershipKey: PublicKey;
    shares: number | bigint;
}>;
export declare function getFanoutMembershipVoucherSize(): number;
export declare function findFanoutMembershipVoucherPda(context: Pick<Context, 'eddsa' | 'programs'>, seeds: {
    /** The address of the fanout account */
    fanout: PublicKey;
    /** The member's public key */
    member: PublicKey;
}): Pda;
export declare function fetchFanoutMembershipVoucherFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findFanoutMembershipVoucherPda>[1], options?: RpcGetAccountOptions): Promise<FanoutMembershipVoucher>;
export declare function safeFetchFanoutMembershipVoucherFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findFanoutMembershipVoucherPda>[1], options?: RpcGetAccountOptions): Promise<FanoutMembershipVoucher | null>;
