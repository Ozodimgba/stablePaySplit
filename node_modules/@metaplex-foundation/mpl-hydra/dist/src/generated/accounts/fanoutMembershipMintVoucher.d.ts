/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type FanoutMembershipMintVoucher = Account<FanoutMembershipMintVoucherAccountData>;
export type FanoutMembershipMintVoucherAccountData = {
    discriminator: Array<number>;
    fanout: PublicKey;
    fanoutMint: PublicKey;
    lastInflow: bigint;
    bumpSeed: number;
};
export type FanoutMembershipMintVoucherAccountDataArgs = {
    fanout: PublicKey;
    fanoutMint: PublicKey;
    lastInflow: number | bigint;
    bumpSeed: number;
};
/** @deprecated Use `getFanoutMembershipMintVoucherAccountDataSerializer()` without any argument instead. */
export declare function getFanoutMembershipMintVoucherAccountDataSerializer(_context: object): Serializer<FanoutMembershipMintVoucherAccountDataArgs, FanoutMembershipMintVoucherAccountData>;
export declare function getFanoutMembershipMintVoucherAccountDataSerializer(): Serializer<FanoutMembershipMintVoucherAccountDataArgs, FanoutMembershipMintVoucherAccountData>;
/** @deprecated Use `deserializeFanoutMembershipMintVoucher(rawAccount)` without any context instead. */
export declare function deserializeFanoutMembershipMintVoucher(context: object, rawAccount: RpcAccount): FanoutMembershipMintVoucher;
export declare function deserializeFanoutMembershipMintVoucher(rawAccount: RpcAccount): FanoutMembershipMintVoucher;
export declare function fetchFanoutMembershipMintVoucher(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<FanoutMembershipMintVoucher>;
export declare function safeFetchFanoutMembershipMintVoucher(context: Pick<Context, 'rpc'>, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions): Promise<FanoutMembershipMintVoucher | null>;
export declare function fetchAllFanoutMembershipMintVoucher(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<FanoutMembershipMintVoucher[]>;
export declare function safeFetchAllFanoutMembershipMintVoucher(context: Pick<Context, 'rpc'>, publicKeys: Array<PublicKey | Pda>, options?: RpcGetAccountsOptions): Promise<FanoutMembershipMintVoucher[]>;
export declare function getFanoutMembershipMintVoucherGpaBuilder(context: Pick<Context, 'rpc' | 'programs'>): import("@metaplex-foundation/umi").GpaBuilder<FanoutMembershipMintVoucher, {
    discriminator: Array<number>;
    fanout: PublicKey;
    fanoutMint: PublicKey;
    lastInflow: number | bigint;
    bumpSeed: number;
}>;
export declare function getFanoutMembershipMintVoucherSize(): number;
export declare function findFanoutMembershipMintVoucherPda(context: Pick<Context, 'eddsa' | 'programs'>, seeds: {
    /** The address of the fanout account */
    fanout: PublicKey;
    /** The address of the membership account */
    membership: PublicKey;
    /** The address of the mint account */
    mint: PublicKey;
}): Pda;
export declare function fetchFanoutMembershipMintVoucherFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findFanoutMembershipMintVoucherPda>[1], options?: RpcGetAccountOptions): Promise<FanoutMembershipMintVoucher>;
export declare function safeFetchFanoutMembershipMintVoucherFromSeeds(context: Pick<Context, 'eddsa' | 'programs' | 'rpc'>, seeds: Parameters<typeof findFanoutMembershipMintVoucherPda>[1], options?: RpcGetAccountOptions): Promise<FanoutMembershipMintVoucher | null>;
