/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type TransferSharesInstructionAccounts = {
    authority?: Signer;
    fromMember: PublicKey | Pda;
    toMember: PublicKey | Pda;
    fanout: PublicKey | Pda;
    fromMembershipAccount: PublicKey | Pda;
    toMembershipAccount: PublicKey | Pda;
};
export type TransferSharesInstructionData = {
    discriminator: Array<number>;
    shares: bigint;
};
export type TransferSharesInstructionDataArgs = {
    shares: number | bigint;
};
/** @deprecated Use `getTransferSharesInstructionDataSerializer()` without any argument instead. */
export declare function getTransferSharesInstructionDataSerializer(_context: object): Serializer<TransferSharesInstructionDataArgs, TransferSharesInstructionData>;
export declare function getTransferSharesInstructionDataSerializer(): Serializer<TransferSharesInstructionDataArgs, TransferSharesInstructionData>;
export type TransferSharesInstructionArgs = TransferSharesInstructionDataArgs;
export declare function transferShares(context: Pick<Context, 'programs' | 'identity'>, input: TransferSharesInstructionAccounts & TransferSharesInstructionArgs): TransactionBuilder;
