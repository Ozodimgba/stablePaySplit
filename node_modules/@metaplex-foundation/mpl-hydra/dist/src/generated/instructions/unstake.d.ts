/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type UnstakeInstructionAccounts = {
    member: Signer;
    fanout: PublicKey | Pda;
    membershipVoucher: PublicKey | Pda;
    membershipMint: PublicKey | Pda;
    membershipMintTokenAccount: PublicKey | Pda;
    memberStakeAccount: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    tokenProgram?: PublicKey | Pda;
    instructions: PublicKey | Pda;
};
export type UnstakeInstructionData = {
    discriminator: Array<number>;
};
export type UnstakeInstructionDataArgs = {};
/** @deprecated Use `getUnstakeInstructionDataSerializer()` without any argument instead. */
export declare function getUnstakeInstructionDataSerializer(_context: object): Serializer<UnstakeInstructionDataArgs, UnstakeInstructionData>;
export declare function getUnstakeInstructionDataSerializer(): Serializer<UnstakeInstructionDataArgs, UnstakeInstructionData>;
export declare function unstake(context: Pick<Context, 'programs'>, input: UnstakeInstructionAccounts): TransactionBuilder;
