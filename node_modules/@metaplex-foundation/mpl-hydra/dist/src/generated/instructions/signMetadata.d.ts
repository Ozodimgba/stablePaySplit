/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type SignMetadataInstructionAccounts = {
    authority?: Signer;
    fanout: PublicKey | Pda;
    holdingAccount: PublicKey | Pda;
    metadata: PublicKey | Pda;
    tokenMetadataProgram?: PublicKey | Pda;
};
export type SignMetadataInstructionData = {
    discriminator: Array<number>;
};
export type SignMetadataInstructionDataArgs = {};
/** @deprecated Use `getSignMetadataInstructionDataSerializer()` without any argument instead. */
export declare function getSignMetadataInstructionDataSerializer(_context: object): Serializer<SignMetadataInstructionDataArgs, SignMetadataInstructionData>;
export declare function getSignMetadataInstructionDataSerializer(): Serializer<SignMetadataInstructionDataArgs, SignMetadataInstructionData>;
export declare function signMetadata(context: Pick<Context, 'programs' | 'identity'>, input: SignMetadataInstructionAccounts): TransactionBuilder;
