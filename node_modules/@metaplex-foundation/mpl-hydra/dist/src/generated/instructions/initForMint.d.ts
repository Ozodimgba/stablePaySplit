/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export type InitForMintInstructionAccounts = {
    authority?: Signer;
    fanout: PublicKey | Pda;
    fanoutForMint: PublicKey | Pda;
    mintHoldingAccount: PublicKey | Pda;
    mint: PublicKey | Pda;
    systemProgram?: PublicKey | Pda;
    rent?: PublicKey | Pda;
};
export type InitForMintInstructionData = {
    discriminator: Array<number>;
    bumpSeed: number;
};
export type InitForMintInstructionDataArgs = {
    bumpSeed: number;
};
/** @deprecated Use `getInitForMintInstructionDataSerializer()` without any argument instead. */
export declare function getInitForMintInstructionDataSerializer(_context: object): Serializer<InitForMintInstructionDataArgs, InitForMintInstructionData>;
export declare function getInitForMintInstructionDataSerializer(): Serializer<InitForMintInstructionDataArgs, InitForMintInstructionData>;
export type InitForMintInstructionArgs = InitForMintInstructionDataArgs;
export declare function initForMint(context: Pick<Context, 'programs' | 'identity'>, input: InitForMintInstructionAccounts & InitForMintInstructionArgs): TransactionBuilder;
